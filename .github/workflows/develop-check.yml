name: build + eslint check

on:
    pull_request:
        branches:
            - develop

jobs:
    check:
        name: check
        runs-on: ubuntu-latest
        outputs:
            client: ${{steps.filter.outputs.client}}
            server: ${{steps.filter.outputs.server}}
            noti-server: ${{steps.filter.outputs.server}}

        steps:
            - uses: dorny/paths-filter@v2
              id: filter
              with:
                  filters: |
                      client:
                        - 'client/**'
                      server:
                        - 'server/**'
                      noti-server:
                        - 'noti-server/**'

    client:
        needs: check
        if: ${{needs.check.outputs.client=='true'}}
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Nodejs Setup
              uses: actions/setup-node@v3

            - name: Cache client node modules
              id: cache-client
              uses: actions/cache@v3
              with:
                  path: client/node_modules
                  key: npm-packages-client-${{hashFiles('**/package-lock.json')}}
                  restore-keys: |
                      npm-packages-client-

            - name: Install client dependencies
              if: ${{steps.cache-client.outputs.cache-hit != 'true'}}
              run: cd client && npm install

            - name: Client eslint check
              run: ./client/node_modules/.bin/eslint client/src --ext .ts,.tsx

            - name: Run client build check
              run: cd client && npm run build

    server:
        needs: check
        if: ${{needs.check.outputs.server=='true'}}
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Nodejs Setup
              uses: actions/setup-node@v3

            - name: Cache server node modules
              id: cache-server
              uses: actions/cache@v3
              with:
                  path: server/node_modules
                  key: npm-packages-server-${{hashFiles('**/package-lock.json')}}
                  restore-keys: |
                      npm-packages-server-

            - name: Install server dependencies
              if: ${{steps.cache-server.outputs.cache-hit != 'true'}}
              run: cd server && npm install

            - name: server eslint check
              run: ./server/node_modules/.bin/eslint server/src --ext .ts,.tsx

            - name: Run server build check
              run: cd server && npm run build

    noti-server:
        needs: check
        if: ${{needs.check.outputs.noti-server=='true'}}
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Nodejs Setup
              uses: actions/setup-node@v3

            - name: Cache noti-server node modules
              id: cache-noti-server
              uses: actions/cache@v3
              with:
                  path: noti-server/node_modules
                  key: npm-packages-noti-server-${{hashFiles('**/package-lock.json')}}
                  restore-keys: |
                      npm-packages-noti-server-

            - name: Install noti-server dependencies
              if: ${{steps.cache-noti-server.outputs.cache-hit != 'true'}}
              run: cd noti-server && npm install

            - name: Noti server eslint check
              run: ./noti-server/node_modules/.bin/eslint noti-server/src --ext .ts,.tsx

            - name: Run noti server build check
              run: cd noti-server && npm run build
